#! /usr/bin/make -f
#
#	debian/rules file for squid.
#

# Version.
package = tklbam-squid
rootdir = /usr/lib/tklbam/deps

SHELL	= /bin/bash
LC_ALL	= POSIX

DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU 2>/dev/null)
DEB_HOST_ARCH_OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2>/dev/null)

ifeq ($(DEB_HOST_ARCH_CPU),arm64)
  DEB_HOST_ARCH_CPU := aarch64
endif

CFLAGS = -Wall -g
INSTALL = install
INSTALL_FILE    = $(INSTALL) -p    -o root -g root  -m  644
INSTALL_PROGRAM = $(INSTALL) -p    -o root -g root  -m  755
INSTALL_SCRIPT  = $(INSTALL) -p    -o root -g root  -m  755
INSTALL_DIR     = $(INSTALL) -p -d -o root -g root  -m  755

NUMJOBS = 1
     
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
CFLAGS += -O0
else
CFLAGS += -O2
endif

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
INSTALL_PROGRAM += -s
endif
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

# Take account of old dpkg-architecture output.
ifeq ($(DEB_HOST_ARCH_CPU),)
  DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)
  ifeq ($(DEB_HOST_ARCH_CPU),x86_64)
    DEB_HOST_ARCH_CPU := amd64
  endif
endif
ifeq ($(DEB_HOST_ARCH_OS),)
  DEB_HOST_ARCH_OS := $(subst -gnu,,$(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM))
  ifeq ($(DEB_HOST_ARCH_OS),gnu)
    DEB_HOST_ARCH_OS := hurd
  endif
endif

tmp	     = debian/tmp

bindir       = $(rootdir)/usr/sbin
libexecdir   = $(rootdir)/usr/lib/squid
sysconfdir   = $(rootdir)/etc/squid
logdir       = $(rootdir)/var/log/squid
datadir      = $(rootdir)/usr/share/squid

DEFAULTS     =	logdir=$(logdir) \
		DEFAULT_CACHE_LOG=$(logdir)/cache.log \
		DEFAULT_ACCESS_LOG=$(logdir)/access.log \
		DEFAULT_STORE_LOG=$(logdir)/store.log \
		DEFAULT_PID_FILE=/var/run/$(package).pid \
		DEFAULT_SWAP_DIR=/var/spool/$(package) \
		DEFAULT_ICON_DIR=$(datadir)/icons \
		DEFAULT_ERROR_DIR=$(datadir)/errors/en \
		DEFAULT_MIME_TABLE=$(datadir)/mime.conf \

# The HURD doesn't have pthreads yet.
ifeq ($(DEB_HOST_ARCH_OS), gnu)
	with_pthreads = --enable-storeio=ufs,diskd,null
	with_netfilter =
	with_arp_acl =
	with_epoll =
else
ifeq ($(DEB_HOST_ARCH_OS), kfreebsd)
	with_pthreads = --enable-async-io --with-pthreads \
		--enable-storeio=ufs,aufs,coss,diskd,null
	with_netfilter =
	with_arp_acl =
	with_epoll = --enable-kqueue
else
	with_pthreads = --enable-async-io --with-pthreads \
		--enable-storeio=ufs,aufs,coss,diskd,null
	with_netfilter = --enable-linux-netfilter
	with_arp_acl = --enable-arp-acl
	with_epoll = --enable-epoll
endif
endif

# setresuid is broken on sparc
ifeq ($(DEB_HOST_ARCH_CPU), sparc)
	opt_ac_cv_func_setresuid = ac_cv_func_setresuid=no
else
	opt_ac_cv_func_setresuid = ac_cv_func_setresuid=yes
endif

define checkdir
	test -f src/squid.h
endef


# Build the binaries.
build: MAKEFLAGS += -j$(NUMJOBS)
build: patch config.status
	$(checkdir)
	$(MAKE) $(DEFAULTS) all
	# Authentication modules
	cd helpers/external_acl/ip_user && make
	cd helpers/external_acl/session && make
	cd helpers/external_acl/unix_group && make
	touch build

# Configure the package.
config.status: 

	rm cfgaux/config.sub cfgaux/config.guess
	ln -s /usr/share/misc/config.sub cfgaux/
	ln -s /usr/share/misc/config.guess cfgaux/

	$(opt_ac_cv_func_setresuid) \
	./configure \
    --enable-default-err-language=English \
	--prefix=$(rootdir)/usr \
	--exec_prefix=$(rootdir)/usr \
	--bindir=$(rootdir)/usr/sbin --sbindir=$(rootdir)/usr/sbin \
	--libexecdir=$(rootdir)/usr/lib/squid \
	--sysconfdir=$(sysconfdir) \
	--localstatedir=/var/spool/$(package) \
	--datadir=$(rootdir)/usr/share/squid \
	$(with_pthreads) \
	$(with_netfilter) \
	$(with_arp_acl) \
	$(with_epoll) \
	--enable-removal-policies=lru,heap \
	--enable-delay-pools \
	--enable-cache-digests \
	--enable-underscores \
	--enable-referer-log \
	--enable-useragent-log \
	--enable-negotiate-auth-helpers=squid_kerb_auth \
	--enable-follow-x-forwarded-for \
	--with-large-files \
	--with-maxfd=65536 \
	$(DEB_HOST_ARCH_CPU)-debian-$(DEB_HOST_ARCH_OS)

# Architecture independant files.
binary-indep:	build checkroot
	-rm -rf $(tmp) debian/files
	$(checkdir)
	#
	#	Build $(package)-common package.
	#
	$(INSTALL_DIR) $(tmp)/DEBIAN
	$(INSTALL_DIR) $(tmp)/$(datadir)
	$(INSTALL_DIR) $(tmp)/$(datadir)/icons
	$(INSTALL_DIR) $(tmp)/$(datadir)/errors

	$(INSTALL_FILE) src/mime.conf.default ./$(tmp)$(datadir)/mime.conf
	cp -a errors/English $(tmp)/$(datadir)/errors/en

	#
	$(INSTALL_FILE) icons/*.gif ./$(tmp)$(datadir)/icons

	$(INSTALL_DIR) $(tmp)/usr/share/doc/$(package)
	dpkg-gencontrol -isp -p$(package)-common
	dpkg --build $(tmp) ..
	rm -f debian/substvars
	rm -rf $(tmp)

# Make a binary package (.deb file)
binary-arch:	build checkroot
	#
	#	Build squid package.
	#
	$(INSTALL_DIR) $(tmp)/DEBIAN
	$(INSTALL_DIR) $(tmp)$(rootdir)/usr/sbin
	$(INSTALL_DIR) $(tmp)$(rootdir)/usr/lib/squid
	install -m 750 -o proxy -g proxy -d $(tmp)/var/spool/$(package)

	#
	install -m 755 tklbam-squid $(tmp)$(rootdir)/usr/sbin
	$(INSTALL_PROGRAM) src/squid $(tmp)$(rootdir)/usr/sbin
	$(INSTALL_PROGRAM) src/unlinkd src/fs/diskd-daemon src/logfile-daemon $(tmp)$(rootdir)/usr/lib/squid
	$(INSTALL_PROGRAM) helpers/external_acl/ip_user/ip_user_check \
		$(tmp)$(libexecdir)/ip_user_check
	$(INSTALL_PROGRAM) helpers/external_acl/session/squid_session \
		$(tmp)$(libexecdir)/squid_session
	$(INSTALL_PROGRAM) helpers/external_acl/unix_group/squid_unix_group \
		$(tmp)$(libexecdir)/squid_unix_group
	#
	$(INSTALL_DIR) $(tmp)/usr/share/doc/$(package)
	$(INSTALL_FILE) ChangeLog $(tmp)/usr/share/doc/$(package)/changelog
	$(INSTALL_FILE) debian/changelog \
		$(tmp)/usr/share/doc/$(package)/changelog.Debian
	$(INSTALL_FILE) debian/copyright $(tmp)/usr/share/doc/$(package)
	$(INSTALL_SCRIPT) debian/preinst $(tmp)/DEBIAN/preinst
	#$(INSTALL_FILE) debian/templates $(tmp)/DEBIAN/templates
	po2debconf debian/templates > debian/templates.merged
	$(INSTALL_FILE) debian/templates.merged $(tmp)/DEBIAN/templates

	# overrides file
	
	dpkg-shlibdeps $(tmp)$(libexecdir)/*
	dpkg-gencontrol -isp -p$(package)
	dpkg --build $(tmp) ..
	rm -f debian/substvars
	rm -rf $(tmp)

# Clean up.
clean: clean1 unpatch
clean1:	checkroot
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f helpers/external_acl/ip_user/{Makefile,ip_user,dict.o,main.o,match.o}
	rm -f helpers/external_acl/unix_group/{Makefile,squid_unix_group,check_group.o}
	-rm -f build debian/{substvars,files,templates.merged}
	rm -rf $(tmp) *~
	-find . -name '*.bak' -o -name '*~' | xargs -r rm -f --
	#cd icons && /bin/sh ./icons.shar
	debconf-updatepo

binary:	binary-indep binary-arch

checkroot:
	$(checkdir)
	test root = "`whoami`"

dist:	binary
	dpkg-source -b

.PHONY: binary binary-arch binary-indep clean checkroot clean1 patch unpatch
